//Using Recursion
class Solution {
public:
    void inorder(TreeNode* root,vector<int>&ans)
    {
         if(root==NULL)
         return ;
         inorder(root->left,ans);
         ans.push_back(root->val);
         inorder(root->right,ans);
    }
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>ans;
        inorder(root,ans);
        return ans;
    }
};


//Using Iteration
class Solution {
public:
   vector<int> inorderTraversal(TreeNode* root)
  {
        vector<int>ans;
        stack<TreeNode*>s;
        
      while (true)
      {
        if (root!=NULL)
        {
           s.push(root);
           root=root-> left;
        }
        else 
        {
           if (s.empty())
           break;
           root = s.top();
           ans.push_back(root ->val);
           s.pop();
           root =root -> right;
        }
      }
    return ans;
  }
};

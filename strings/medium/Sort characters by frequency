class Solution {
public:
    string frequencySort(string s)
    {
        unordered_map<char,int>mpp;
        for(int i=0;i<s.length();i++)
        {
            mpp[s[i]]++;
        }
        s="";
        vector<pair<char,int>>vec(mpp.begin(),mpp.end());
        sort(vec.begin(),vec.end(),[](const pair<char,int>&a,const pair<char,int>&b)
        {
            return a.second>b.second;
        });

        for(auto itr:vec)
        {
            if(itr.second>1)
            {
                int count=0;
                while(count<itr.second)
                {
                    s+=itr.first;
                    count++;
                }
            }
            else
            {
                s+=itr.first;
            }
        }
        return s;

    }
};

//brute(T.C=O(N),S.C=O(N))
int minAddToMakeValid(string s)
    {
        stack<char>st;
        int n=s.size();
        int cnt=0;
        for(int i=0;i<n;i++)
        {
            if(s[i]=='(')
            st.push(s[i]);
            else if(!st.empty()&&s[i]==')')
            st.pop();
            else 
            cnt++;
        }
        return cnt+st.size();
    }


//optimal(T.C=O(N),S.C=O(1))
int minAddToMakeValid(string s) {
        int n=s.size();
        int open=0;
        int close=0;
        for(int i=0;i<n;i++)
        {
            if(s[i]=='(')
            open++;
            else if(open==0)
            close++;
            else
            open--;
        }
        return open+close;
    }

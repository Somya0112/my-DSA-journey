//Brute(T.C=O(N),S.C=O(1))
int findMin(vector<int>& arr) {
    int n = arr.size(); // size of the array.
    int mini = INT_MAX;
    for (int i = 0; i < n; i++) {
        // Always keep the minimum.
        mini = min(mini, arr[i]);
    }
    return mini;
}

//Optimal(T.C=O(logN),S.C=O(1))
     int findMin(vector<int>& nums)
    {
         int n=nums.size();
         int low=0,high=n-1,ans=INT_MAX;
         while(low<=high)
         {
             int mid=(low+high)/2;

             if(nums[low]<=nums[high])
             {
                 ans=min(ans,nums[low]);
                 break;
             }

             if(nums[low]<=nums[mid])
             {
                 ans=min(ans,nums[low]);
                 low=mid+1;
             }
             else
             {
                 ans=min(ans,nums[mid]);
                 high=mid-1;
             }
         }
         return ans;
    }



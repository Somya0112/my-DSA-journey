//Brute(T.C=O(M*N),S.C=O(1))
int rowWithMax1s(vector<vector<int>> &matrix, int n, int m)
{
    int cnt_max=0;
    int index=-1;
    for(int i=0;i<n;i++)
    {
        int cnt_ones=0;
        for(int j=0;j<m;j++)
        {
            cnt_ones+=matrix[i][j];
        }
        if(cnt_ones>cnt_max)
        {
            cnt_max=cnt_ones;
            index=i;
        }
    }
    return index;
}


//Optimal(T.C=O(N*logM),S.C=O(1))
int lowerbnd(vector<int>arr,int m,int x)
{
    int low=0,high=m-1;
    int ans=m;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(arr[mid]>=x)
        {
            ans=mid;
            high=mid-1;
        }
        else
        low=mid+1;
    }
    return ans;
}

int rowWithMax1s(vector<vector<int>> &matrix, int n, int m)
{
    //    Write your code here.
    int cnt_max=0;
    int index=-1;
    for(int i=0;i<n;i++)
    {
        int cnt=m-lowerbnd(matrix[i],m,1);
        if(cnt>cnt_max)
        {
            cnt_max=cnt;
            index=i;
        }
    }
    return index;
}

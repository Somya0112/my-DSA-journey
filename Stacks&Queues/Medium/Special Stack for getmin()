class SpecialStack {
    public:
    stack<int>st;
    int mini;

    void push(int data) {
        // Implement the push() function.
        if(st.empty())
        {
            st.push(data);
            mini=data;
        }
        else{
            if(data<mini)
            {
                st.push(2*data-mini);
                mini=data;
            }
            else
            {
                st.push(data);
            }
        }
    }

    int pop() {
        // Implement the pop() function.
        if(st.empty())
        return -1;
        int curr=st.top();
        st.pop();
       
        if(curr>mini)
        {
           return curr;
        }
        else
        {
            int prevmin=mini;
            int val=2*mini-curr;
            mini=val;
            return prevmin;
        }

    }

    int top() {
        // Implement the top() function.
        if(st.empty())
        {
            return -1;
        }
        int curr=st.top();
        if(curr<mini)
        {
            return mini;
        }
        else{
            return curr;
        }
    }

    int getMin() {
        // Implement the getMin() function.
        if(st.empty())
        return -1;

        return mini;
    }  
};

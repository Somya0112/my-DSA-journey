//Brute Solution1 (T.C=O(2N),S.C=(O((N))

vector<int> moveZeros(int n, vector<int> a) {
    //temporary array:
    vector<int> temp;
    //copy non-zero elements
    //from original -> temp array:
    for (int i = 0; i < n; i++) {
        if (a[i] != 0)
            temp.push_back(a[i]);
    }

    // number of non-zero elements.
    int nz = temp.size();

    //copy elements from temp
    //fill first nz fields of
    //original array:
    for (int i = 0; i < nz; i++) {
        a[i] = temp[i];
    }

    //fill rest of the cells with 0:
    for (int i = nz; i < n; i++) {
        a[i] = 0;
    }
    return a;
}





//Solution2 (T.C=O(N),S.C=O(1))
vector<int> moveZeros(int n, vector<int> a) {
    int j=-1;
    for(int i=0;i<a.size();i++)
    {
      if (a[i] == 0) {
        j = i;
        break;
      }
    }
    if(j==-1)
    {
        return a;
    }

    for(int i=j+1;i<a.size();i++)
    {
        if(a[i]!=0)
        {
            swap(a[i],a[j]);
            j++;
        }
    }
    return a;
}
